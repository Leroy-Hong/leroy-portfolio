/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    body: THREE.SkinnedMesh
    pants001: THREE.Mesh
    feet: THREE.SkinnedMesh
    hands: THREE.SkinnedMesh
    neck: THREE.SkinnedMesh
    pants: THREE.SkinnedMesh
    sleeves: THREE.SkinnedMesh
    BackHair: THREE.Mesh
    Ears: THREE.Mesh
    Eyes: THREE.Mesh
    Hairs: THREE.Mesh
    Head: THREE.Mesh
    Plane: THREE.Mesh
    hood: THREE.Mesh
    spine: THREE.Bone
    heelIKL: THREE.Bone
    heelIKR: THREE.Bone
    handControllerR: THREE.Bone
    handControllerL: THREE.Bone
    kneeIKR: THREE.Bone
    kneeIKL: THREE.Bone
    coreIK: THREE.Bone
  }
  materials: {
    ['Toon Hoodie.001']: THREE.MeshStandardMaterial
    ['Toon Gray.001']: THREE.MeshStandardMaterial
    ['Toon Skin.001']: THREE.MeshStandardMaterial
  }
}

type ActionName = 'waving'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Chibi(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('3D_models/chibi.glb') as GLTFResult
  // const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="metarig"
          position={[0, -6.696, 0]}
          rotation={[0, -Math.PI / 2, 0]}
          scale={3.391}>
          <skinnedMesh
            name="body"
            geometry={nodes.body.geometry}
            material={materials['Toon Hoodie.001']}
            skeleton={nodes.body.skeleton}>
            <mesh
              name="pants001"
              geometry={nodes.pants001.geometry}
              material={materials['Toon Gray.001']}
              position={[0, 0.937, 0]}
              rotation={[0, Math.PI / 2, 0]}
              scale={[0.176, 0.295, 0.295]}
            />
          </skinnedMesh>
          <skinnedMesh
            name="feet"
            geometry={nodes.feet.geometry}
            material={materials['Toon Skin.001']}
            skeleton={nodes.feet.skeleton}
          />
          <skinnedMesh
            name="hands"
            geometry={nodes.hands.geometry}
            material={materials['Toon Skin.001']}
            skeleton={nodes.hands.skeleton}
          />
          <skinnedMesh
            name="neck"
            geometry={nodes.neck.geometry}
            material={materials['Toon Skin.001']}
            skeleton={nodes.neck.skeleton}
          />
          <skinnedMesh
            name="pants"
            geometry={nodes.pants.geometry}
            material={materials['Toon Gray.001']}
            skeleton={nodes.pants.skeleton}
          />
          <skinnedMesh
            name="sleeves"
            geometry={nodes.sleeves.geometry}
            material={materials['Toon Hoodie.001']}
            skeleton={nodes.sleeves.skeleton}
          />
          <primitive object={nodes.spine} />
          <primitive object={nodes.heelIKL} />
          <primitive object={nodes.heelIKR} />
          <primitive object={nodes.handControllerR} />
          <primitive object={nodes.handControllerL} />
          <primitive object={nodes.kneeIKR} />
          <primitive object={nodes.kneeIKL} />
          <primitive ref={props.coreRef} object={nodes.coreIK} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('3D_models/chibi.glb')